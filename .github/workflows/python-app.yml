name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
 
      runs-on: ubuntu-latest
      strategy:
        matrix:
          os: [ "ubuntu-latest", "windows-latest" ]
     
      defaults:
        run:
           working-directory: ./example-app
     
      steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
 
      - name: Install Poetry Action
        uses: snok/install-poetry@v1.3.4
   
      - name: Install dependencies
        run: poetry install --no-root

      - name: Cache build venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: /home/runner/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-venv
   
  lint:
 
      runs-on: ubuntu-latest
      strategy:
        matrix:
          os: [ "ubuntu-latest", "windows-latest" ]
     
      defaults:
        run:
           working-directory: ./example-app
           
      needs: build
     
      steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install Poetry Action
        uses: snok/install-poetry@v1.3.4
      - name: Cache build venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: /home/runner/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-venv
      - name: Lint
        run: poetry run task lint
       
  formatter:
 
      runs-on: ubuntu-latest
      strategy:
        matrix:
          os: [ "ubuntu-latest", "windows-latest" ]
     
      defaults:
        run:
           working-directory: ./example-app
           
      needs: build
     
      steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install Poetry Action
        uses: snok/install-poetry@v1.3.4
      - name: Cache build venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: /home/runner/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-venv
      - name: formatter
        run: poetry run task formatter

  security:
 
      runs-on: ubuntu-latest
      strategy:
        matrix:
          os: [ "ubuntu-latest", "windows-latest" ]
     
      defaults:
        run:
           working-directory: ./example-app
           
      needs: build
     
      steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install Poetry Action
        uses: snok/install-poetry@v1.3.4
      - name: Cache build venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: /home/runner/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-venv
      - name: security
        run: poetry run task security

  unittest:
 
      runs-on: ubuntu-latest
      strategy:
        matrix:
          os: [ "ubuntu-latest", "windows-latest" ]
     
      defaults:
        run:
           working-directory: ./example-app
           
      needs: [lint, formatter, security]
     
      steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install Poetry Action
        uses: snok/install-poetry@v1.3.4
      - name: Cache build venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: /home/runner/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-venv
      - name: security
        run: poetry run task security
